{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "arus-adf-suraj-EastUs"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerSPs')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerSURAJ_SURAJ001')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "CustomerName",
						"type": "varchar"
					},
					{
						"name": "RegionName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Customer"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "CustomerName",
						"type": "varchar"
					},
					{
						"name": "RegionName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Customer_dest"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlBrowser",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTableBrowserADF",
								"type": "DatasetReference"
							},
							"name": "sourceEcommerceADF"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTableBrowserADF",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTableBrowserADF",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn"
						},
						{
							"name": "Lookup1"
						},
						{
							"name": "ConditionalSplit1"
						},
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tBrowserID as integer,\n\t\tReferrerDomain as string,\n\t\tUTMSource as string,\n\t\tUTMMedium as string,\n\t\tUTMCampaign as string,\n\t\tUTMContent as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource(output(\n\t\tBrowserID as integer,\n\t\tReferrerDomain as string,\n\t\tUTMSource as string,\n\t\tUTMMedium as string,\n\t\tUTMCampaign as string,\n\t\tUTMContent as string,\n\t\tCreatedOn as timestamp,\n\t\tCreatedBy as string,\n\t\tUpdatedOn as timestamp,\n\t\tUpdatedBy as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> sourceEcommerceADF\nsource1 derive(CreatedOn = currentTimestamp(),\n\t\tUpdatedOn = currentTimestamp()) ~> DerivedColumn\nDerivedColumn, sourceEcommerceADF lookup(source1@BrowserID == sourceEcommerceADF@BrowserID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nLookup1 split(isNull(sourceEcommerceADF@BrowserID),\n\t!isNull(sourceEcommerceADF@BrowserID) && (source1@ReferrerDomain!=sourceEcommerceADF@ReferrerDomain || source1@UTMSource!=sourceEcommerceADF@UTMSource || source1@UTMMedium!=sourceEcommerceADF@UTMMedium || source1@UTMCampaign!=sourceEcommerceADF@UTMCampaign || source1@UTMContent!=sourceEcommerceADF@UTMCampaign),\n\tdisjoint: false) ~> ConditionalSplit1@(NewRecord, UpdateRecords, DeleteRecord)\nConditionalSplit1@UpdateRecords alterRow(updateIf(true())) ~> AlterRow1\nConditionalSplit1@NewRecord sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tBrowserID as integer,\n\t\tReferrerDomain as string,\n\t\tUTMSource as string,\n\t\tUTMMedium as string,\n\t\tUTMCampaign as string,\n\t\tUTMContent as string,\n\t\tCreatedOn as timestamp,\n\t\tCreatedBy as string,\n\t\tUpdatedOn as timestamp,\n\t\tUpdatedBy as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tdateFormat:'dd-MM-yyyy',\n\ttimestampFormat:'MM/dd/yyyy HH:mm:ss',\n\tbooleanFormat: ['true', 'false'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tBrowserID = ConditionalSplit1@NewRecord@BrowserID,\n\t\tReferrerDomain = ConditionalSplit1@NewRecord@ReferrerDomain,\n\t\tUTMSource = ConditionalSplit1@NewRecord@UTMSource,\n\t\tUTMMedium = ConditionalSplit1@NewRecord@UTMMedium,\n\t\tUTMCampaign = ConditionalSplit1@NewRecord@UTMCampaign,\n\t\tUTMContent = ConditionalSplit1@NewRecord@UTMContent,\n\t\tCreatedOn = ConditionalSplit1@NewRecord@CreatedOn,\n\t\tUpdatedOn = ConditionalSplit1@NewRecord@UpdatedOn\n\t)) ~> sink1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tBrowserID as integer,\n\t\tReferrerDomain as string,\n\t\tUTMSource as string,\n\t\tUTMMedium as string,\n\t\tUTMCampaign as string,\n\t\tUTMContent as string,\n\t\tCreatedOn as timestamp,\n\t\tCreatedBy as string,\n\t\tUpdatedOn as timestamp,\n\t\tUpdatedBy as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['BrowserID'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tBrowserID = ConditionalSplit1@UpdateRecords@BrowserID,\n\t\tReferrerDomain = ConditionalSplit1@UpdateRecords@ReferrerDomain,\n\t\tUTMSource = ConditionalSplit1@UpdateRecords@UTMSource,\n\t\tUTMMedium = ConditionalSplit1@UpdateRecords@UTMMedium,\n\t\tUTMCampaign = ConditionalSplit1@UpdateRecords@UTMCampaign,\n\t\tUTMContent = ConditionalSplit1@UpdateRecords@UTMContent,\n\t\tUpdatedOn = ConditionalSplit1@UpdateRecords@UpdatedOn\n\t)) ~> sink2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Region')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT RegionName FROM [dbo].[Region]\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerSURAJ_SURAJ001",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderStoredProcedureName": "[[dbo].[usp_RegionList]",
											"storedProcedureParameters": {
												"RegionName": {
													"type": "String",
													"value": {
														"value": "@item().RegionName",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlServerSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SqlServerTable2",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-16T15:28:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerSURAJ_SURAJ001')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineBrowser')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sourceEcommerceADF": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineCopyEcommerce')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data Browser",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BrowserID",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "BrowserID",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "ReferrerDomain",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReferrerDomain",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UTMSource",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UTMSource",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UTMMedium",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UTMMedium",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UTMCampaign",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UTMCampaign",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UTMContent",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UTMContent",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerEcommerce",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineCopydataToSqlServer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data Orders",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "suraj/Ecommerce/@{'Orders_2021-07-29_152925.csv'}"
							},
							{
								"name": "Destination",
								"value": "@{'src'}.@{'Orders'}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Created At",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Created At",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Updated At",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Updated At",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Cancelled At",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cancelled At",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Cancel: Reason",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cancel  Reason",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Currency",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Currency",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Source",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Source",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Price: Total Line Items",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Price  Total Line Items",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Price: Total Refund",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Price  Total Refund",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Price: Total",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Price  Total",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Payment: Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Payment  Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Payment: Processing Method",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Payment  Processing Method",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer: ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer  ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer: Orders Count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer  Orders Count",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer: Total Spent",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer  Total Spent",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Shipping: Zip",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Shipping  Zip",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Shipping: Province",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Shipping  Province",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Shipping: Country",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Shipping  Country",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Browser: Referrer Domain",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Browser  Referrer Domain",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Browser: UTM Source",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Browser  UTM Source",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Browser: UTM Medium",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Browser  UTM Medium",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Browser: UTM Campaign",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Browser  UTM Campaign",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Browser: UTM Content",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Browser  UTM Content",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Top Row",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Top Row",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Line: Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Line  Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Line: Product ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Line  Product ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Line: Variant ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Line  Variant ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Line: Quantity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Line  Quantity",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Line: Price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Line  Price",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Line: Discount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Line  Discount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Line: Gift Card",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Line  Gift Card",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Line: Fulfillment Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Line  Fulfillment Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Line: Variant SKU",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Line  Variant SKU",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Line: Variant Cost",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Line  Variant Cost",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Refund: Created At",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Refund  Created At",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Refund: Note",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Refund  Note",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Refund: Restock",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Refund  Restock",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Transaction: Amount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Transaction  Amount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Transaction: Message",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Transaction  Message",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Transaction: Gateway",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Transaction  Gateway",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Fulfillment: Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Fulfillment  Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Fulfillment: Created At",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Fulfillment  Created At",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Fulfillment: Updated At",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Fulfillment  Updated At",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Fulfillment: Shipment Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Fulfillment  Shipment Status",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedTextEcommerceCSV",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "Orders_2021-07-29_152925.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerEcommerceADF",
								"type": "DatasetReference",
								"parameters": {
									"schemaname": "src",
									"tablename": "Orders"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Ecommerce"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineGetSPs')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "Select 'EXEC '+spname+ ' '''+SPpValue+'''' \nAS SP,FileName+'_'+Cast(Cast(getdate() as date) as\nvarchar(100)) as FileName from dbo.SPList",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerSPs",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@item().SP",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServerTable3",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DelimitedText2",
											"type": "DatasetReference",
											"parameters": {
												"dsFileName": {
													"value": "@item().FileName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-16T17:54:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerSPs')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TestTrigger",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 3,
						"startTime": "2021-10-15T09:50:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": []
		}
	]
}