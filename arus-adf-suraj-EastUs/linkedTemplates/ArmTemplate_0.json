{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "arus-adf-suraj-EastUs"
		},
		"AzureSqlDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDB'"
		},
		"arus_datalake_demo_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'arus_datalake_demo'"
		},
		"error_linkedService_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'error_linkedService'"
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer1'"
		},
		"SqlServer2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer2'"
		},
		"SqlServerEcommerceDWHADF_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServerEcommerceDWHADF'"
		},
		"arus_datalake_demo_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://aruslearnlake.dfs.core.windows.net"
		},
		"error_linkedService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://aruslearnlake.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_wait_pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait5",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/arus_datalake_demo')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('arus_datalake_demo_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('arus_datalake_demo_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/error_linkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('error_linkedService_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('error_linkedService_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/arus-suraj-EastUs-ir')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinaryDataSource_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "It describes the file in the data source store.",
				"linkedServiceName": {
					"referenceName": "arus_datalake_demo",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "String"
					},
					"Directory": {
						"type": "String"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@{dataset().Directory}",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@{dataset().Container}",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/arus_datalake_demo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinaryDataSource_Folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "It describes the folder in the data source store.",
				"linkedServiceName": {
					"referenceName": "arus_datalake_demo",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "String"
					},
					"Directory": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@{dataset().Directory}",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@{dataset().Container}",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/arus_datalake_demo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "arus_datalake_demo",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Employees - 2.csv",
						"folderPath": "Employees",
						"fileSystem": "suraj"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/arus_datalake_demo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "arus_datalake_demo",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dsFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().dsFileName",
							"type": "Expression"
						},
						"folderPath": "Input",
						"fileSystem": "suraj"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/arus_datalake_demo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dest_EmployeeStagingJSON_SQLServer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmployeeID",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Age",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "PhoneNumber",
						"type": "varchar"
					},
					{
						"name": "Technology",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "suraj",
					"table": "EmployeeStagingJSON"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dest_EmployessDest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmployeeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "AGE",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "suraj",
					"table": "Employees"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dest_Student_AzureSql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "StudentID",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "StudentName",
						"type": "varchar"
					},
					{
						"name": "CourseName",
						"type": "varchar"
					},
					{
						"name": "CourseID",
						"type": "tinyint",
						"precision": 3
					}
				],
				"typeProperties": {
					"schema": "suraj",
					"table": "Student"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_EmployeeJSON_DataLake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "arus_datalake_demo",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Employee.txt",
						"folderPath": "Employee",
						"fileSystem": "suraj"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"EmployeeID": {
							"type": "integer"
						},
						"Name": {
							"type": "string"
						},
						"Age": {
							"type": "integer"
						},
						"PhoneNumbers": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"Techonlogies": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Name": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/arus_datalake_demo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_Emplyoess_Datalake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "arus_datalake_demo",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Employee",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/arus_datalake_demo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_Student_Datalake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "arus_datalake_demo",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Student.csv",
						"folderPath": "Student",
						"fileSystem": "suraj"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "StudentName",
						"type": "String"
					},
					{
						"name": "CourseName",
						"type": "String"
					},
					{
						"name": "CourseID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/arus_datalake_demo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This is from Ecommerce",
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "arus-suraj-EastUs-ir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/arus-suraj-EastUs-ir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer2_connectionString')]"
				},
				"connectVia": {
					"referenceName": "arus-suraj-EastUs-ir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/arus-suraj-EastUs-ir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerEcommerceDWHADF')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServerEcommerceDWHADF_connectionString')]"
				},
				"connectVia": {
					"referenceName": "arus-suraj-EastUs-ir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/arus-suraj-EastUs-ir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowCSVToSqlServer')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "arus_datalake_demo",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "arus_datalake_demo",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "HashCompute"
						},
						{
							"name": "LookupBrowserID"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\tBrowserID as integer,\n\t\tReferrerDomain as string,\n\t\tUTMSource as string,\n\t\tUTMMedium as string,\n\t\tUTMCampaign as string,\n\t\tUTMContent as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delimited',\n\tfileSystem: 'suraj',\n\tfolderPath: 'BrowserData',\n\tfileName: 'BrowserData.csv',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: true) ~> source1\nsource1 derive(Hash = toBinary(md5(ReferrerDomain+UTMSource+UTMMedium+UTMCampaign+UTMContent)),\n\t\tBrowserID = toInteger(BrowserID),\n\t\tCreatedOn = currentDate(),\n\t\tUpdatedOn = currentDate()) ~> HashCompute\nSelect1, source1 lookup(Select1@BrowserID == source1@BrowserID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupBrowserID\nHashCompute select(mapColumn(\n\t\tBrowserID,\n\t\tReferrerDomain,\n\t\tUTMSource,\n\t\tUTMMedium,\n\t\tUTMCampaign,\n\t\tUTMContent,\n\t\tHash,\n\t\tCreatedOn,\n\t\tUpdatedOn\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nLookupBrowserID sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delimited',\n\tfileSystem: 'suraj',\n\tfolderPath: 'BrowserData',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: false,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/arus_datalake_demo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowEmployee')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "arus_datalake_demo",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "arus_datalake_demo",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						},
						{
							"linkedService": {
								"referenceName": "arus_datalake_demo",
								"type": "LinkedServiceReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "Select2"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tAge as integer,\n\t\tLocation as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delimited',\n\tfileSystem: 'suraj',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: true,\n\twildcardPaths:['Employees/*.csv']) ~> source1\nsource1 derive(AgeGroup = case(Age> 21, 'Senior', 'Junior')) ~> DerivedColumn1\nDerivedColumn1 filter(AgeGroup == 'Junior') ~> Filter1\nFilter1 select(mapColumn(\n\t\tName,\n\t\tAge,\n\t\tLocation\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nDerivedColumn1 filter(AgeGroup == 'Senior') ~> Filter2\nFilter2 select(mapColumn(\n\t\tName,\n\t\tAge,\n\t\tLocation\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delimited',\n\tfileSystem: 'suraj',\n\tfolderPath: 'Employees/Junior',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: false,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tName,\n\t\tAge,\n\t\tLocation\n\t)) ~> sink1\nSelect2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delimited',\n\tfileSystem: 'suraj',\n\tfolderPath: 'Employees/Senior',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: false,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/arus_datalake_demo')]"
			]
		}
	]
}